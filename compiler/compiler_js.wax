(@include "token.wax")
(@include "node.wax")
(@include "node_preprocess.wax")
(@include "target_wax.wax")
(@include "target_js.wax")
(@include "target_cpp.wax")

(extern readfile (param filename str) (result str))
(asm "declare var require: any;")
(asm "function readfile(filename) {")
(asm "  let fs=require('fs');")
(asm "  return fs.readFileSync('/workspaces/wax/compiler/' + filename).toString();")
(asm "}")

(func main (result int)
    (let prog str (call readfile "./compiler.wax"))

	(let tokens (arr str) (call token_parse prog))
	(let root (struct node) (call node_from_tokens tokens))
	(set root (call node_preprocess root))

   	(let out str (call node_to_js 0 root))
	(print out)

	(return 0)
)