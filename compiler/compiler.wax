(@include "token.wax")
(@include "node.wax")
(@include "target_wax.wax")
(@include "target_js.wax")

(extern readfile (param filename str) (result str))
(asm "declare var require: any;")
(asm "function readfile(filename) {")
(asm "  let fs=require('fs');")
(asm "  return fs.readFileSync('/workspaces/wax/compiler/' + filename).toString();")
(asm "}")

(func main (result int)
    ; (let prog str (call readfile "../examples/helloworld.wax"))
    ; (let prog str (call readfile "../examples/fib.wax"))
    ; (let prog str (call readfile "../examples/nqueens.wax"))
    ; (let prog str (call readfile "../examples/hilbert.wax"))
    ; (let prog str (call readfile "../examples/turing_mod.wax"))
    (let prog str (call readfile "token_test.wax"))

	(let tokens (arr str) (call token_parse prog))
	; (print (call token_to_string tokens 100))

	(let root (struct node) (call node_from_tokens tokens))
	(set root (call node_preprocess root))

	; (let out str (call node_to_wax 0 root))
   	(let out str (call node_to_js 0 root))
	(print out)

	(return 0)
)